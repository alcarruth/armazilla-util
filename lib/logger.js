// Generated by CoffeeScript 2.7.0
(function() {
  // -*- coffee -*-

  //  file: /src/lib/logger.coffee
  //  package: armazilla-util

  var Logger, stacktrace, util;

  util = require('util');

  stacktrace = require('stacktrace-js');

  Logger = class Logger {
    constructor({obj, options, threshold}) {
      this._log = this._log.bind(this);
      this.log_level = this.log_level.bind(this);
      this.log = this.log.bind(this);
      this.info = this.info.bind(this);
      this.warn = this.warn.bind(this);
      this.error = this.error.bind(this);
      this.owner_id = (obj != null ? obj.id : void 0) || null;
      this.options = {
        colors: (options != null ? options.colors : void 0) || true,
        depth: (options != null ? options.depth : void 0) || null
      };
      this.threshold = threshold != null ? threshold : 2;
    }

    async _log(xs, type = '') {
      var function_name, i, len, x;
      function_name = ((await stacktrace.get()))[2].functionName;
      console.log(`\n${type}${function_name}():`);
      for (i = 0, len = xs.length; i < len; i++) {
        x = xs[i];
        console.log(util.inspect(x, this.options));
      }
      return void 0;
    }

    log_level(level, ...xs) {
      if (level >= this.threshold) {
        return this.log(...xs);
      }
    }

    log(...xs) {
      return this._log(xs);
    }

    info(...xs) {
      return this._log(xs, 'INFO: ');
    }

    warn(...xs) {
      return this._log(xs, 'WARNING: ');
    }

    error(...xs) {
      return this.log(xs, 'ERROR: ');
    }

  };

  exports.Logger = Logger;

}).call(this);
